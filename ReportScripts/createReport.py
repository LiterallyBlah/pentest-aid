from docx import Document
import datetime
import json
from Scripts import clearConsole
import Templates


def main(template_file, output_file, json_file, author):
    # Select the template you would like to use to generate the report.
    template_file_path = template_file
    # Select the name of the document you would like the output to direct to. (you can include output path too)
    output_file_path = output_file
    # so the reference() can use the now variable. I'm lazy and prefer to reuse variables.
    global now
    # now grabs today's date.
    now = datetime.datetime.now()

    global template_document
    # directs python-docx to open the contents of template_file_path
    template_document = Document(template_file_path)

    # the below four lines simply call the different functions found later in the script.
    assessment_selection()
    assessment_executive_summary()
    reference()
    replace_scope()

    # clears the console screen.
    clearConsole.clearConsole()

    endDate = input("End Date (dd/mm/yyyy):\n> ")

    global variables
    # holds basic information generated by functions and from user input.
    variables = {
        "{{Author}}": author,
        "{{Date}}": now.strftime("%d/%m/%Y"),
        "{{Client}}": client,
        "{{Assess}}": assessment_selection,
        "{{End_Date}}": endDate,
        "{{Ref}}": ref,
        "{{Scope}}": scope,
        "{{OnelineScope}}": scope1, # this scope is an unedited version from the one above. separates scope via spaces.
        "assessmentSelection": assessment_selection,
        "outputDoc": output_file_path,
        "nessusFile": ""
    }

    # searches and replaces the key and value from the variables dictionary within the opened template.
    ReplaceVariables()

    json_object = json.dumps(variables, indent=4)
    with open(json_file, "w") as outfile:
        outfile.write(json_object)

    # saves opened template as the ouput_file_path's name. The template is left untouched and will be reused!
    template_document.save(output_file_path)


# for the key and value in the variables dictionary, look for the key in the template docx file and replace with value.
# this applies to both tables and regular paragraphs. I haven't tested it with text boxes.
def ReplaceVariables():
    for key, value in variables.items():
        replace_text_in_paragraph(key, value)

    for key, value in variables.items():
        replace_text_in_table(key, value)


# generates a reference. It uses the first letter of each name, first letters of the assessment type, then today's date
def reference():
    global client
    clearConsole.clearConsole()
    client = input("Client Name: \n> ")
    ref_assess = ""

    # for each word in the selected assessment, add the letter to ref_assess.
    for word in assessment_selection.split():
        ref_assess += word[0]

    ref_client = str()
    # for each word in the client's name, grab the first letter, make it uppercase, then add to ref_client
    for word in client.split():
        ref_client = ref_client + word[0].upper()

    # generate today's date with the year being short hand. Longhand = 2022, shorthand = 22
    ref_date = datetime.datetime.now().strftime("%m%Y")
    ref_date = ref_date[:-4] + ref_date[-2:]

    global ref
    # adds the above together, seperated by '/'
    ref = ref_client + "/" + ref_assess + "/" + ref_date


# this function stores the executive summary paragraphs and inserts the specific paragraph depending on the assessment.
def assessment_executive_summary():
    # paragraphs is equal to the paragraphs stored in the docx template.
    paragraphs = template_document.paragraphs

    # for each key in the assessment paragraphs, check if the key is equal to the selected assessment,
    # if so - then for every paragraph in the docx template, check to see if {{paraexec}} is present,
    # if so, then insert the paragraph before {{paraexec}}.
    for key in assessments_paragraphs.keys():
        if key == assessment_selection:
            for paragraph in paragraphs:
                if '{{paraexec}}' in paragraph.text:
                    paragraph.insert_paragraph_before(text=assessments_paragraphs[key]).text

    # for every paragraph in the docx template, check if {{paraexec}} is present, if so, replace it with an empty string
    for paragraph in template_document.paragraphs:
        if '{{paraexec}}' in paragraph.text:
            paragraph.text = paragraph.text.replace('{{paraexec}}', "")


# This function creates a selection of different types of assessments.
def assessment_selection():
    global assessments_list
    assessments_list = []

    # Creates a list out of the keys in assessments_paragraphs.
    for key in assessments_paragraphs.keys():
        assessments_list.append(key)

    clearConsole.clearConsole()

    # for assessment in the assessments list, assign a number with '. ' and then the assessment name.
    num = 0
    for index in assessments_list:
        num = num + 1
        print(str(num) + '. ' + index)

    global assessment_selection

    assessment_selection = input("What type of assessment are you conducting [1-5]? \n> ")

    # for assessment in the assessment list, check if the assessment is equal to the number,
    # if it does assessment_selection equals the assessment name.
    num = 0
    for key in assessments_list:
        num += 1
        if assessment_selection == num:
            assessment_selection = key
            continue
        else:
            print("That option isn't present. Defaulting to Web Application.\n")
            assessment_selection = "Web Application"


# function defines what the scope is by prompting user, then sorts each ip/domain into a new line.
def replace_scope():
    global scope
    scope = ""
    clearConsole.clearConsole()
    # too simple and self-explanatory to explain.
    scope = scope + input("Scope: (separated by ',' and ', ')\n> ")
    scope = scope.replace(" , ", " ")
    scope = scope.replace(", ", " ")
    scope = scope.replace(",", " ")
    global scope1
    scope1 = scope
    scope = scope.replace(" ", "\n")

    # for every paragraph in the docx template, replace {{Scope}} with the above created scope.
    for paragraph in template_document.paragraphs:
        replace_text_in_paragraph("{{Scope}}", scope)


# Search and replace function for paragraphs.
def replace_text_in_paragraph(search, replace):
    # for every paragraph in docx template,
    for paragraph in template_document.paragraphs:
        # if what you search for is in the paragraph text,
        if search in paragraph.text:
            inline = paragraph.runs
            # for every word in the paragraph text,
            for item in inline:
                # if what you search is in the text,
                if search in item.text:
                    # the text is replaced by what you set.
                    item.text = item.text.replace(search, replace)


# Search and replace function for tables
def replace_text_in_table(search, replace):
    # for every table in the docx template,
    for table in template_document.tables:
        # look at every row in the tables,
        for row in table.rows:
            # for every cell in the rows,
            for cell in row.cells:
                # for every paragraph in the cells,
                for paragraph in cell.paragraphs:
                    # if what you search for is in the paragraph,
                    if search in paragraph.text:
                        # replace the search with what you want to replace it with.
                        paragraph.text = paragraph.text.replace(search, replace)


# Add executive summary paragraphs and will automatically be an option
global assessments_paragraphs
assessments_paragraphs = {
    "Web Application": "In this section, we will cover our findings within this web application assessment "
                       "carried out by {{Author}}. Readers will be informed of a high-level perspective of any "
                       "concerns and vulnerabilities identified during testing. All results were analysed and "
                       "manually assessed to make this assessment more thorough and reliable.\n\nThe web "
                       "application(s) in scope have been assessed to identify weak points and vulnerabilities "
                       "that need to be configured or patched accordingly. The identified vulnerabilities and "
                       "misconfigurations affect the scope in a few different ways. One of the common ways this "
                       "can be taken advantage of is utilising them within social engineering attacks.\n\nOther "
                       "attack methods exploit the weak encryption by capturing data between a client and the "
                       "scope and then exploiting the weak encryption allowing the malicious actor to read the "
                       "potentially sensitive information.\n\nAll remediation suggestions have been listed in the "
                       "vulnerability tables and external links to provide further information.",
    "External Infrastructure": "In this section, we will cover our findings within this external infrastructure "
                               "assessment carried out by {{Author}}. Readers will be informed of a high-level "
                               "perspective of any concerns and vulnerabilities identified during testing. All "
                               "results were analysed and manually assessed to make this assessment more thorough "
                               "and reliable.\n\nThe external hosts in scope have been assessed to identify weak "
                               "points and vulnerabilities that need to be configured or patched accordingly. The "
                               "identified vulnerabilities and misconfigurations affect the scope in a few "
                               "different ways. One of the common ways this can be taken advantage of is "
                               "utilising them within social engineering attacks. \n\nOther attack methods "
                               "exploit the weak encryption by capturing data between a client and the scope and "
                               "then exploiting the weak encryption allowing the malicious actor to read the "
                               "potentially sensitive information. \n\nAll remediation suggestions have been "
                               "listed in the vulnerability tables and external links to provide further "
                               "information.",
    "Internal Infrastructure": "In this section, we will cover our findings within this internal infrastructure "
                               "assessment carried out by {{Author}}. Readers will be informed of a high-level "
                               "perspective of any concerns and vulnerabilities identified during testing. All "
                               "results were analysed and manually assessed to make this assessment more thorough "
                               "and reliable.\n\nThe internal hosts in scope have been assessed to identify weak "
                               "points and vulnerabilities that need to be configured or patched accordingly. The "
                               "identified vulnerabilities and misconfigurations affect the scope in a few "
                               "different ways. One of the common ways this can be taken advantage of is "
                               "utilising them within social engineering attacks. \n\nOther attack methods "
                               "exploit the weak encryption by capturing data between a client and the scope and "
                               "then exploiting the weak encryption allowing the malicious actor to read the "
                               "potentially sensitive information. \n\nAll remediation suggestions have been "
                               "listed in the vulnerability tables and internal links to provide further "
                               "information.",
    "External and Internal Infrastructure": "In this section, we will cover our findings within this external and "
                                            "internal infrastructure assessment carried out by {{Author}}. "
                                            "Readers will be informed of a high-level perspective of any concerns "
                                            "and vulnerabilities identified during testing. All results were "
                                            "analysed and manually assessed to make this assessment more thorough "
                                            "and reliable.\n\nThe external and internal hosts in scope have been "
                                            "assessed to identify weak points and vulnerabilities that need to be "
                                            "configured or patched accordingly. The identified vulnerabilities "
                                            "and misconfigurations affect the scope in a few different ways. One "
                                            "of the common ways this can be taken advantage of is utilising them "
                                            "within social engineering attacks. \n\nOther attack methods exploit "
                                            "the weak encryption by capturing data between a client and the scope "
                                            "and then exploiting the weak encryption allowing the malicious actor "
                                            "to read the potentially sensitive information. \n\nAll remediation "
                                            "suggestions have been listed in the vulnerability tables and "
                                            "external and internal links to provide further information.",
    "Mobile Application": "In this section, we will cover our findings within this mobile application "
                          "infrastructure assessment carried out by {{Author}}. Readers will be informed of a "
                          "high-level perspective of any concerns and vulnerabilities identified during testing. "
                          "All results were analysed and manually assessed to make this assessment more thorough "
                          "and reliable.\n\nThe mobile application hosts in scope have been assessed to identify "
                          "weak points and vulnerabilities that need to be configured or patched accordingly. The "
                          "identified vulnerabilities and misconfigurations affect the scope in a few different "
                          "ways. One of the common ways this can be taken advantage of is utilising them within "
                          "social engineering attacks. \n\nOther attack methods exploit the weak encryption by "
                          "capturing data between a client and the scope and then exploiting the weak encryption "
                          "allowing the malicious actor to read the potentially sensitive information. \n\nAll "
                          "remediation suggestions have been listed in the vulnerability tables and mobile "
                          "application links to provide further information. "
}


if __name__ == '__main__':
    main()
